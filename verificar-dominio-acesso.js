const { Client } = require('pg');

// Configura√ß√µes do novo admin
const FULANOSANDER_USER_ID = '12345678-1234-1234-1234-123456789abc';
const FULANOSANDER_EMAIL = 'fulanosander@gmail.com';
const FULANOSANDER_DOMAIN = 'demo.catalofacil.com.br';

async function verificarDominioAcesso() {
    console.log('üåê VERIFICANDO ACESSO AO DOM√çNIO');
    console.log('=================================\n');
    
    // URL do banco de produ√ß√£o
    const databaseUrl = 'postgresql://catalofacil:4WdNU3pa3vCOzshZO9dKmAgNyj4gYLte@dpg-d1srh66mcj7s73arkbtg-a.virginia-postgres.render.com:5432/catalofacil_postgres?connection_limit=2';
    
    // Configurar conex√£o com banco de produ√ß√£o
    const client = new Client({
        connectionString: databaseUrl,
        ssl: { rejectUnauthorized: false }
    });
    
    try {
        console.log('üîó Conectando ao banco de produ√ß√£o...');
        await client.connect();
        console.log('‚úÖ Conectado ao banco de produ√ß√£o com sucesso!');
        console.log('');
        
        // 1. Verificar usu√°rio
        console.log('1Ô∏è‚É£ Verificando usu√°rio...');
        const userCheck = await client.query(`
            SELECT id, email, role FROM auth.users WHERE email = $1
        `, [FULANOSANDER_EMAIL]);
        
        if (userCheck.rows.length === 0) {
            console.log('‚ùå Usu√°rio n√£o encontrado!');
            return;
        }
        
        console.log('‚úÖ Usu√°rio encontrado:', userCheck.rows[0]);
        
        // 2. Verificar dom√≠nio vinculado
        console.log('2Ô∏è‚É£ Verificando dom√≠nio vinculado...');
        const domainCheck = await client.query(`
            SELECT domain, user_id FROM public.domain_owners WHERE user_id = $1
        `, [FULANOSANDER_USER_ID]);
        
        if (domainCheck.rows.length === 0) {
            console.log('‚ùå Nenhum dom√≠nio vinculado ao usu√°rio!');
        } else {
            console.log('‚úÖ Dom√≠nios vinculados:');
            domainCheck.rows.forEach(row => {
                console.log(`   - ${row.domain}`);
            });
        }
        
        // 3. Verificar se o dom√≠nio correto est√° vinculado
        console.log('3Ô∏è‚É£ Verificando se o dom√≠nio correto est√° vinculado...');
        const correctDomainCheck = await client.query(`
            SELECT domain, user_id FROM public.domain_owners WHERE domain = $1
        `, [FULANOSANDER_DOMAIN]);
        
        if (correctDomainCheck.rows.length === 0) {
            console.log('‚ùå Dom√≠nio demo.catalofacil.com.br n√£o est√° vinculado!');
            console.log('üîß Vinculando dom√≠nio correto...');
            
            await client.query(`
                INSERT INTO public.domain_owners (
                    id,
                    domain,
                    user_id,
                    created_at,
                    updated_at,
                    domain_type
                )
                VALUES (gen_random_uuid(), $1, $2, NOW(), NOW(), 'domain')
                ON CONFLICT (domain) DO UPDATE SET
                    user_id = EXCLUDED.user_id,
                    updated_at = NOW()
            `, [FULANOSANDER_DOMAIN, FULANOSANDER_USER_ID]);
            
            console.log('‚úÖ Dom√≠nio demo.catalofacil.com.br vinculado!');
        } else {
            console.log('‚úÖ Dom√≠nio demo.catalofacil.com.br j√° est√° vinculado');
        }
        
        // 4. Verificar loja
        console.log('4Ô∏è‚É£ Verificando loja...');
        const storeCheck = await client.query(`
            SELECT name, domain FROM public.stores WHERE domain = $1
        `, [FULANOSANDER_DOMAIN]);
        
        if (storeCheck.rows.length === 0) {
            console.log('‚ùå Loja n√£o encontrada para o dom√≠nio!');
            console.log('üîß Criando loja...');
            
            await client.query(`
                INSERT INTO public.stores (
                    id,
                    name,
                    slug,
                    domain,
                    user_id,
                    description,
                    logo_url,
                    banner_url,
                    whatsapp_number,
                    instagram_url,
                    theme_color,
                    created_at,
                    updated_at
                )
                VALUES (
                    gen_random_uuid(),
                    'Demo Cat√°logo F√°cil',
                    'demo-catalofacil',
                    $1,
                    $2,
                    'Loja de demonstra√ß√£o do Cat√°logo F√°cil',
                    'https://via.placeholder.com/150x50/007bff/ffffff?text=Demo+Cat√°logo+F√°cil',
                    'https://via.placeholder.com/1200x300/007bff/ffffff?text=Banner+Demo+Cat√°logo+F√°cil',
                    '5551999999999',
                    'https://instagram.com/demo_catalofacil',
                    '#007bff',
                    NOW(),
                    NOW()
                )
                ON CONFLICT (domain) DO UPDATE SET
                    name = EXCLUDED.name,
                    description = EXCLUDED.description,
                    updated_at = NOW()
            `, [FULANOSANDER_DOMAIN, FULANOSANDER_USER_ID]);
            
            console.log('‚úÖ Loja criada!');
        } else {
            console.log('‚úÖ Loja encontrada:', storeCheck.rows[0]);
        }
        
        // 5. Verifica√ß√£o final
        console.log('5Ô∏è‚É£ Verifica√ß√£o final...');
        const finalDomainCheck = await client.query(`
            SELECT domain, user_id FROM public.domain_owners WHERE domain = $1
        `, [FULANOSANDER_DOMAIN]);
        
        const finalStoreCheck = await client.query(`
            SELECT name, domain FROM public.stores WHERE domain = $1
        `, [FULANOSANDER_DOMAIN]);
        
        console.log('‚úÖ Verifica√ß√£o final conclu√≠da');
        
        // 6. Resumo final
        console.log('');
        console.log('üéØ CONFIGURA√á√ÉO DE DOM√çNIO CONCLU√çDA!');
        console.log('=====================================');
        console.log('');
        console.log('üìß Email: fulanosander@gmail.com');
        console.log('üîë Senha: 123456');
        console.log('üÜî User ID: 12345678-1234-1234-1234-123456789abc');
        console.log('');
        console.log('üåê DOM√çNIO CORRETO:');
        console.log('   - demo.catalofacil.com.br');
        console.log('');
        console.log('‚ùå DOM√çNIO INCORRETO (n√£o acesse):');
        console.log('   - catalofacil.catalofacil.com.br');
        console.log('');
        console.log('üìä STATUS FINAL:');
        console.log('- Dom√≠nio vinculado:', finalDomainCheck.rows.length > 0 ? '‚úÖ' : '‚ùå');
        console.log('- Loja criada:', finalStoreCheck.rows.length > 0 ? '‚úÖ' : '‚ùå');
        console.log('');
        console.log('‚úÖ AGORA ACESSE APENAS: demo.catalofacil.com.br');
        console.log('');
        console.log('üí° IMPORTANTE:');
        console.log('   - Use apenas o dom√≠nio demo.catalofacil.com.br');
        console.log('   - N√£o acesse catalofacil.catalofacil.com.br');
        console.log('   - Configure o DNS do dom√≠nio demo.catalofacil.com.br');
        
    } catch (error) {
        console.error('‚ùå Erro durante a execu√ß√£o:', error.message);
        
        if (error.code === '23505') {
            console.log('‚ÑπÔ∏è Erro de duplica√ß√£o - alguns dados j√° existem');
        }
        
        if (error.code === 'ECONNREFUSED') {
            console.log('‚ùå Erro de conex√£o com o banco');
            console.log('üìù Verifique se a DATABASE_URL est√° correta');
        }
        
        if (error.code === '42P01') {
            console.log('‚ùå Tabela n√£o encontrada');
            console.log('üìù Verifique se o banco est√° configurado corretamente');
        }
    } finally {
        await client.end();
    }
}

// Executar
verificarDominioAcesso(); 